function Andariel()
{
		if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(35)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	for(var i = 0 ; i < 2 ; i++){
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
			OpenChestsInArea();
		}
		if(!NTM_MoveToStair(me.areaid, 36+i)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
			return;
		}
		if(!NTM_TakeStair(36+i)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
	}
	if(NTConfig_RightWall){
		if(!NTM_MoveTo(me.areaid, 22563, 9556)){ //right wall
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
			return;
		}
	}
	else{
		if(!NTM_MoveTo(me.areaid, 22532, 9553)){ // left wall
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
			return;
		}
	}
	if(!NTA_KillMonster(156)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	NTC_PingDelay(200);
	NTSI_PickItems();
	if(NTConfig_ClearAndarielThrone){
		var _attackpos = [22570, 9584, 22546, 9593, 22518, 9587, 22558, 9556, 22552, 9515, 22540, 9537, 22542, 9554, 22548, 9580];
		for(var i = 0 ; i < _attackpos.length ; i += 2){
			NTM_MoveTo(me.areaid, _attackpos[i], _attackpos[i+1]);
			NTA_ClearPosition(30, 0x04);
			NTA_ClearPosition(30);
			NTSI_PickItems();
		}
		NTT_CleanPotions();
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Countess()
{
		var _countess;

		if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(6)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	for(var i = 0 ; i < 6 ; i++){

	   if(me.areaid >= 21 && NTConfig_ClearTower == 1){
                        NTConfig_SkipRegularMonsters = false;
                        NTP_DoPrecast(true);
                        if(!NTA_ClearLevel()){
                                NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
                                return;
                        }
                }
                if(me.areaid >= 21 && NTConfig_ClearTower == 2){
                        NTConfig_SkipRegularMonsters = true;
                        NTP_DoPrecast(true);
                        if(!NTA_ClearLevel()){
                                NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
                                return;
                        }
                }

		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
			OpenChestsInArea();
		}
		if(!NTM_MoveToStair(me.areaid, 20+i)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
			return;
		}
		if(!NTM_TakeStair(20+i)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
	}
	if(NTConfig_ClearPosition)
		NTA_ClearPosition(10, true, 2);
	if(me.y > 11060 && me.y <= 11078){
		if(!NTM_MoveTo(me.areaid, 12544, 11066)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
			return;
		}
	}
	else{
		if(!NTM_MoveTo(me.areaid, 12570, 11057)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
			return;
		}
	}
	_countess = NTC_FindUnit(NTC_UNIT_MONSTER, GetLocaleString(2875), 5);
	if(!_countess){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTC_FindUnit()");
		return;
	}
	if(me.y > 11060 && me.y <= 11078){
		if(_countess.y <= 11054)
			NTM_MoveTo(me.areaid, 12537, 11042);
		if(_countess.y > 11056 && _countess.y <= 11070){
			if(_countess.x < 12533)
				NTM_MoveTo(me.areaid, 12518, 11057);
			else
				NTM_MoveTo(me.areaid, 12548, 11057);
		}
		if(_countess.y > 11070 && _countess.y <= 11085){
			if(_countess.x < 12533)
				NTM_MoveTo(me.areaid, 12518, 11083);
			else
				NTM_MoveTo(me.areaid, 12548, 11083);
		}
		if(_countess.y > 11086)
			NTM_MoveTo(me.areaid, 12542, 11098);
	}
	else{
		if(_countess.x <= 12550){
			NTM_MoveTo(me.areaid, 12562, 11057);
			NTM_MoveTo(me.areaid, 12548, 11043);
		}
		if(_countess.x > 12550 && _countess.x <= 12561){
			if(_countess.y < 11027)
				NTM_MoveTo(me.areaid, 12577, 11043);
			else{
				NTM_MoveTo(me.areaid, 12565, 11043);
				NTM_MoveTo(me.areaid, 12577, 11025);
			}
		}
		if(_countess.x > 12561 && _countess.x <= 12579){
			if(_countess.y < 11027)
				NTM_MoveTo(me.areaid, 12555, 11043);
			else{
				NTM_MoveTo(me.areaid, 12565, 11043);
				NTM_MoveTo(me.areaid, 12555, 11025);
			}
		}
		if(_countess.x > 12579){
			NTM_MoveTo(me.areaid, 12578, 11057);
			NTM_MoveTo(me.areaid, 12582, 11043);
		}
	}
	if(!NTA_KillMonster(GetLocaleString(2875))){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	if(NTConfig_ClearPosition){
		NTA_ClearPosition();
	}
	NTSI_PickItems();

	 if(me.areaid == 25 && NTConfig_ClearTower == 1){
                        NTConfig_SkipRegularMonsters = false;
                        NTP_DoPrecast(true);
                        if(!NTA_ClearLevel()){
                                NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
                                return;
                        }
                }
                if(me.areaid == 25 && NTConfig_ClearTower == 2){
                        NTConfig_SkipRegularMonsters = true;
                        NTP_DoPrecast(true);
                        if(!NTA_ClearLevel()){
                                NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
                                return;
                        }
                }
	if(NTConfig_GetStands){
		if(!NTM_MoveToStair(me.areaid, 24)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
			return;
		}
		if(me.areaid, me.x > 12565 && me.y > 11127){
			if(NTM_MoveTo(me.areaid, 12515, 11099));
			else if(NTM_MoveTo(me.areaid, 12603, 11014));
		}
		var _armor;
		_armor = NTC_FindUnit(NTC_UNIT_OBJECT, GetLocaleString(3247), 1);
		if(GetDistance(me, _armor) > 2)
			NTM_MoveTo(_armor.areaid,_armor.x+1, _armor.y);
		NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _armor);
		NTSI_PickItems();
		var _weapon;
		_weapon = NTC_FindUnit(NTC_UNIT_OBJECT, GetLocaleString(3248), 1);
		if(GetDistance(me, _weapon) > 2)
			NTM_MoveTo(_weapon.areaid,_weapon.x+1, _weapon.y);
		NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _weapon);
		NTSI_PickItems();
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

const _NTR_FAIL_CHECKS = 25;
const _NTR_PRE_EVERY = 40;
const _NTR_CHEST_AND_ROCKS = true;
const _NTR_STRING_PORTAL = GetLocaleString(3226);

function Cows()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	var _wirtbody, _cube, _leg, _portal, _stash, _items, i, _npc, prearea;
	for (i = 0; i < 10; i++){//need to add a check for leg with me.getitems also
		_leg = NTC_FindUnit(NTC_UNIT_ITEM, 88);
		if (_leg)
		break;
	}
	//Checks If you already have the leg
	_items = me.GetItems();
	for (i = 0; i < _items.length;i++){
		if (_items[i].classid == 88) {
			Print ("Already Got Leg");
			_leg = _items[i];
		}
	}
	if (!_leg){
		if(!NTTM_TownMove("waypoint")){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
			return;
		}
		if(!NTM_TakeWaypoint(4)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
			return;
		}
		NTP_DoPrecast(true);
		if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_MONSTER, 737, 10, 10)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
			return;
		}
		if(NTConfig_KillRakanishuCows){
			if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
				NTTMGR_VisitTown();
			}
			if(NTA_KillMonster(GetLocaleString(2872))){
				if(NTConfig_ClearPosition)
				NTA_ClearPosition();
				if(NTConfig_IdInField){
					if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
						NT_FieldID();
					} // id in field add
				}
				NTSI_PickItems();
				if(NTConfig_IdInField){
					if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
						NT_FieldID();
					} // id in field add
				}
			}
		}
		if(!NTM_UsePortal("Portal", 38)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_UsePortal()");
			return;
		}
		if(NTConfig_TristExtension){
			if(!NTA_ClearLevel()){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
			}
		}
		NTM_MoveTo(me.areaid, 25047, 5178);
		if(NTA_ClearPosition(10)){
			if(NTConfig_IdInField){
				if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
					NT_FieldID();
				} // id in field add
			}
			NTSI_PickItems();
			if(NTConfig_IdInField){
				if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
					NT_FieldID();
				} // id in field add
			}
		}
		_wirtbody = NTC_FindUnit(NTC_UNIT_OBJECT, 268);
		if(!_wirtbody){
			NTC_SendMsgToScript("NTBotGame.ntj", "Wirt's body not found.");
			return;
		}
		if(NTM_MoveTo(_wirtbody.areaid, _wirtbody.x+3, _wirtbody.y)){
			if(NTC_OpenChest(_wirtbody)){
				NTC_PingDelay(500);
				for (i = 0; i < 10; i++){
					_leg = NTC_FindUnit(NTC_UNIT_ITEM, 88);
					if (_leg)
					break;
				}
				if(!NTT_CheckSpace(_leg.xsize, _leg.ysize)){
					_prearea = me.areaid
					if(NTTM_CheckAct()){
						NTTMGR_TownManager(true);
						NTTM_TownMove("portalspot")
						NTM_UsePortal("BluePortal", _prearea)
					}
				}
				for (i = 0; i < 20; i++){
					if ((i % 5) == 0){
						if (_leg.mode == 3 || _leg.mode == 5){
							if (NTC_ClearCursor())
							NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _leg);
						}
					}
					NTC_PingDelay(100);
					if (_leg.mode != 3 && _leg.mode != 5){
						Print(COLOR_4 + "Got Leg");
						NTC_PingDelay(200);
						break;
					}
				}
			}
		}
		if(!_leg){
			NTC_SendMsgToScript("NTBotGame.ntj", "No leg found.");
			return;
		}
		NTM_MakeTP(1);
		//NTM_UsePortal("BluePortal");
		//Print(COLOR_8 + " This is where the problem is?");
	}
	else{
		if(!NTT_CheckSpace(_leg.xsize, _leg.ysize)){
			_prearea = me.areaid;
			if(NTTM_CheckAct()){
				NTTMGR_TownManager(true);
				NTTM_TownMove("portalspot")
				NTM_UsePortal("BluePortal", _prearea)
			}
		}
		for (i = 0; i < 20; i++){
			if ((i % 5) == 0){
				if (_leg.mode == 3 || _leg.mode == 5){
					if (NTC_ClearCursor())
					NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _leg);
				}
			}
			NTC_PingDelay(100);
			if (_leg.mode != 3 && _leg.mode != 5){
				Print(COLOR_4 + "Who caries a leg around?");
				NTC_PingDelay(200);
				Print(COLOR_4 + "Dude, thats sick.");
				break;
			}
		}
	}
	if(NTCW_AlreadyTombs()){
		if(!NTTM_CheckAct()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
			return;
		}
		NTTM_TownMove("akara");
		for(var i = 0 ; i < 10 ; i++){
			_npc = NTC_FindUnit(NTC_UNIT_NPC, NTC_NPC_ID_AKARA);
			if(_npc)
			break;
		}
		if(_npc){
			if(NTT_DoInteract(_npc)){
				if(NTT_DoTrade(_npc)){
					_NTR_DoID = NTT_CheckUnids();
					if(_NTR_DoID)
					NTTMGR_IDItems(_npc);
					NTT_FillTome(_npc, 1);
					NTT_FillTome(_npc, 0);
					NTT_SecondTomeTP(_npc, "tbk", 1);
					_portal = NTR_GetTP();
					if(!_portal){
						NTC_SendMsgToScript("NTBotGame.ntj", "No extra tome of townportal found.");
						return;
					}
				}
			}
			me.Cancel(1);
		}
	}
	else
	_portal = NTR_GetTP();
	NTTM_TownMove("stash");
	for(var i = 0 ; i < 10 ; i++){
		_stash = NTC_FindUnit(NTC_UNIT_OBJECT, NTC_UNIT_STASH);
		if(_stash)
		break;
	}
	if(_stash){
		if(NTM_GetCloserInt(_stash)){
			if(NTT_DoInteract(_stash)){
				_items = me.GetItems(NTC_UNIT_CUBE);
				_cube = _items[0];
				if(!_cube){
					NTC_SendMsgToScript("NTBotGame.ntj", "No cube found.");
					return;
				}
				if(NTCU_CheckCubeInventoryInt() > 0){
					NTCU_OpenCubeInt(_cube)
					if(NTCU_ClearCubeInt() < 1){
						NTC_SendMsgToScript("NTBotGame.ntj", "Cube cannot be emptied.");
						return;
					}
					NTCU_CloseCubeInt();
				}
				NTCU_MoveItemToCubeInt(_cube,_leg)
				NTCU_MoveItemToCubeInt(_cube,_portal)
				NTCU_OpenCubeInt(_cube);
				if(Transmute()){
					NTC_PingDelay(NTConfig_CubingDelaysCows);
					NTCU_CloseCubeInt();
					NTC_PingDelay(NTConfig_CubingDelaysCows);
					NTC_CancelMenus();// added this for testing
					NTC_PingDelay(parseInt((NTConfig_CubingDelaysCows / 2), 10));
				}
				else{
					NTC_PingDelay(NTConfig_CubingDelaysCows);
					NTCU_CloseCubeInt();
					NTC_PingDelay(NTConfig_CubingDelaysCows);
					NTC_CancelMenus();// added this for testing
					NTC_PingDelay(parseInt((NTConfig_CubingDelaysCows / 2), 10));
				}
			}
		}
	}
	NTC_PingDelay(NTConfig_CubingDelaysCows);
	if(!NT_TakeCowPortal()){
		NTC_SendMsgToScript("NTBotGame.ntj", "Failed to take Cow Portal.");
		return;
	}
	NTP_DoPrecast(true);
	NTR_ClearRooms();
}

function NTR_GetTP(){
	var _portals = me.GetItems("tbk");
	if (_portals){
		for (var i = 0; i < _portals.length; i++){
			if (_portals[i].mode == 0 && (_portals[i].itemloc != 0 || NTConfig_Columns[_portals[i].y][_portals[i].x] > 0)){
				return _portals[i];
			}
		}
	}
	return false;
}

function abs(integer){
	if(integer < 0){
		integer = -integer;
	}
	return integer;
}

function NTR_TakeCowPortal(range){
	var _portal = NTC_FindUnit(NTC_UNIT_OBJECT, _NTR_STRING_PORTAL);
	if (_portal){
		var _isClick;
		var _preAreaId = me.areaid;
		do{
			if (GetDistance(me, _portal) < range && _portal.mode == 2){
				for (var i = 0; i < 40; i++){
					if ((i % 10) == 0){
						if(NTM_GetCloserInt(_portal))
						_isClick = NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _portal);
					}
					if (_isClick){
						NTC_Delay(200);
						break;
					}
				}
				NTC_PingDelay(1000);
				var j = 0;
				var check = true;
				do{
					if (me.areaid != _preAreaId){
						NTC_PingDelay(500);
						return true;
						check = false;
					}
					j++;
				} while(j < 40 && check == true);
			}
		} while (_portal.GetNext());
	}
	return false;
}

function NTR_ClearPosition(range, pickitem, safelevel, failed){
	var _orgx, _orgy;
	var _spectype = [0x0A, 0x01, 0x01];
	//var _spectype = [0x0A, 0x01];
	var _skiplist;
	var _attackcount = 0;
	var _target;
	var _distance, _mingid, _mindistance;
	var _result;
	var _cowKing;
	var _test;
	if(NTConfig_AttackSkill[1] < 0 || NTConfig_AttackSkill[3] < 0)
	return false;
	switch(arguments.length){
		case 0:
			range = 20;
		case 1:
			pickitem = false;
		case 2:
			safelevel = 0;
		default:
			if((NTConfig_CheckSelfSafe.length < 1) && (NTConfig_CheckMercSafe.length < 1))
			safelevel = 0;
			break;
	}
	_orgx = me.x;
	_orgy = me.y;
	for(var i = 0 ; i < _spectype.length ; i++){
		_skiplist = new Array();
		while(_attackcount < (i+1)*100){
			_mindistance = 100000;
			_target = NTC_FindUnit(NTC_UNIT_MONSTER);
			if(_target){
				do{
					if(_skiplist.indexOf(_target.gid) < 0){
						if(_target.IsAttackable() && (_target.spectype&_spectype[i])){
							if(GetDistance(_orgx, _orgy, _target.x, _target.y) <= range && NTA_IsValidMonster(_target)){
								_distance = GetDistance(me, _target);
								if(_distance < _mindistance){
									_mingid = _target.gid;
									_mindistance = _distance;
								}
							}
						}
						else
						_skiplist.push(_target.gid);
					}
				} while(_target.GetNext());
			}
			if(_mindistance < 100000){
				_target = NTC_FindUnit(NTC_UNIT_MONSTER, _mingid);
				if(_target){
					_cowKing = GetUnit(NTC_UNIT_MONSTER, GetLocaleString(2850));
					if(_cowKing){
						return true;
					}
					_result = NTA_Attack(_target, (_attackcount%30) == 0);
					switch(_result){
						case 1:
							_skiplist.push(_mingid);
							break;
						case 2:
						case 3:
							_attackcount++;
							_sorcattack++;
							break;
						default:
							return false;
					}
				}
			}
			else
				break;
		}
	}
	if(me.classid == NTC_CHAR_CLASS_PALADIN){
		if(_attackcount > 2 && (parseInt(me.hp*100/me.hpmax) < NTConfig_UseRedemptionHP || parseInt(me.mp*100/me.mpmax) < NTConfig_UseRedemptionMP)){
			if(NTC_PutSkill(124, NTC_HAND_RIGHT))
			NTC_PingDelay(1000);
		}
	}
	_cowKing = GetUnit(NTC_UNIT_MONSTER, GetLocaleString(2850));
	if(_cowKing){
		return true;
	}
	if(me.classid == NTC_CHAR_CLASS_NECROMANCER){
		NTA_SkeletonArmy(NTConfig_SkeletonArmy);
		NTA_MageArmy(NTConfig_MageArmy);
		NTA_ReviveArmy(NTConfig_ReviveArmy);
	}
	if(_NTR_CHEST_AND_ROCKS && failed == false){
		_target = NTR_GetChest();
		if(_target){
			do{
				if(_target && GetDistance(_orgx, _orgy, _target.x, _target.y) <= range){
					if(NTC_OpenChest(_target)){
						if(NTConfig_IdInField){
							if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
								NT_FieldID();
							} // id in field add
						}
						NTSI_PickItems();
						if(NTConfig_IdInField){
							if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
								NT_FieldID();
							} // id in field add
						}
					}
				}
			}while(_target.GetNext());
		}
		_target = NTR_GetObj(174);
		if(_target){
			do{
				if(_target && GetDistance(_orgx, _orgy, _target.x, _target.y) <= range){
					if(NTM_MoveTo(me.areaid, _target.x, _target.y)){
						if(NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _target)){
							Delay(200);
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
							NTSI_PickItems();
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
						}
					}
				}
			}while(_target.GetNext());
		}
		_target = NTR_GetObj(175);
		if(_target){
			do{
				if(_target && GetDistance(_orgx, _orgy, _target.x, _target.y) <= range){
					if(NTM_MoveTo(me.areaid, _target.x, _target.y)){
						if(NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _target)){
							Delay(200);
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
							NTSI_PickItems();
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
						}
					}
				}
			}while(_target.GetNext());
		}
		_target = NTR_GetObj(159);
		if(_target){
			do{
				if(_target && GetDistance(_orgx, _orgy, _target.x, _target.y) <= range){
					if(NTM_MoveTo(me.areaid, _target.x, _target.y)){
						if(NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _target)){
							Delay(200);
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
							NTSI_PickItems();
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
						}
					}
				}
			}while(_target.GetNext());
		}
		_target = NTR_GetObj(155);
		if(_target){
			do{
				if(_target && GetDistance(_orgx, _orgy, _target.x, _target.y) <= range){
					if(NTM_MoveTo(me.areaid, _target.x, _target.y)){
						if(NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _target)){
							Delay(200);
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
							NTSI_PickItems();
							if(NTConfig_IdInField){
								if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
									NT_FieldID();
								} // id in field add
							}
						}
					}
				}
			}while(_target.GetNext());
		}
	}
	if(pickitem && _attackcount > 0){
		if(NTConfig_IdInField){
			if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
				NT_FieldID();
			} // id in field add
		}
		NTSI_PickItems();
		if(NTConfig_IdInField){
			if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
				NT_FieldID();
			} // id in field add
		}
	}
	switch(safelevel){
		case 1:
			return NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe);
		case 2:
			return NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe);
	}
	return true;
}

function NTR_ClearRooms(){
	var failcount = 0, precount = 0, x, y, offx = 0, offy = 0, goalx = 0, goaly = 0, cowoffx = 0, cowoffy = 0;
	var toggle = true;
	var _cowKing;
	var _faillast;
	x = me.x;
	y = me.y;
	//NTC_PingDelay(5000);
	while (failcount <= _NTR_FAIL_CHECKS){
		if(toggle == true && offx == goalx){
			if(goaly < 0){
				goaly=(0-(goaly-20));
			}else{
				goaly=(0-(goaly+20));
			}
			toggle = false;
		}
		if(toggle == false && offy == goaly){
			if(goaly < 0){
				goalx=(0-(goalx-20));
			}else{
				goalx=(0-(goalx+20));
			}
			toggle = true;
		}
		if(offy > goaly){
			offy-=20;
			y-=20;
		}
		if(offy < goaly){
			offy+=20;
			y+=20;
		}
		if(offx < goalx){
			offx+=20;
			x+=20;
		}
		if(offx > goalx){
			offx-=20;
			x-=20;
		}
		_cowKing = GetUnit(NTC_UNIT_MONSTER, GetLocaleString(2850));
		if(!_cowKing){
			NTR_ClearPosition(20, true, 0, _faillast);
			if(((GetTickCount()-precount)/1000) >= _NTR_PRE_EVERY && _NTR_PRE_EVERY >= 0){
				NTP_DoPrecast();
				precount = GetTickCount();
			}
		}
		if(!NTM_MoveTo(me.areaid, x, y)){
			failcount++;
			_faillast = true;
		}else{
			_faillast = false;
		}
	}
	return true;
}

function NTT_SecondTomeTP(npc, type, amount){
	var _items;
	var _counter = 0;
	if(arguments.length < 1)
	return false;
	if(arguments.length < 2)
	type = 0;
	if(arguments.length < 0)
	amount = 1;
	if(amount == 0)
	return false;
	if(type)
	_items = npc.GetItems("tbk");
	if(_items){
		if(_items.length > 0){
			for(var i = 0 ; i < amount ; i++){
				if(NTT_ShopItem(_items[0], npc, 2))
				_counter++;
			}
		}
	}
	return (_counter > 0);
}

function NTR_GetChest(){
	var _chest;
	_chest = NTC_FindUnit(NTC_UNIT_OBJECT, "chest");
	if(_chest){
		return _chest;
	}
	return null;
}

function NTR_GetObj(num){
	var _chest;
	_chest = NTC_FindUnit(NTC_UNIT_OBJECT, num);
	if(_chest){
		return _chest;
	}
	return null;
}

function NTCW_AlreadyTombs(){
	var portalbook = me.GetItems("tbk");
	if(portalbook && portalbook.length <= 1)
		return true;
	else
		return false;
}

function NT_TakeCowPortal(){

	var _prearea = me.areaid
	var _portal = NTC_GetUnit(NTC_UNIT_OBJECT, GetLocaleString(3226));

	if(_portal){
		do{
			if(_portal.subareaid == 295 || _portal.subareaid == 39){
				while(_portal.mode != 2){
					Delay(500)
				}
				break;
			}
		} while(_portal.GetNext());
		for(var i = 0 ; i < 40 ; i++){
			if(NTM_GetCloserIntS(_portal)){
				NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _portal);
			}
			if(me.areaid != _prearea){
				break;
			}
		}
	}
	return (me.areaid == 39);
}

function Summoner()
{
		if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(74)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_KillFireEye){
		if(NTM_TakeUnit(NTC_UNIT_OBJECT, 298)){
			if(NTA_KillMonster(GetLocaleString(2885))){
				if(NTConfig_ClearPosition) { NTA_ClearPosition(); }
				NTSI_PickItems();
				if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){ OpenChestsInArea(); }
			}
			if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 298)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
				return;
			}
			if(!NTM_TakeUnit(NTC_UNIT_OBJECT, 298)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeUnit()");
				return;
			}
		}
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(NTConfig_OpenSummonerChests) {
		var _object = GetPresetUnits(me.areaid);
		for(var i = 0; i < _object.length; i++) {
			if(_object[i].id == 357) {
				if(_object[i].x == 11 && _object[i].y == 11){
					Print("Summoner is at the "+COLOR_2+"Top Right");
					NTM_MoveTo(me.areaid,  25863, 5449); //Bottom Right End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25445, 5869); //Bottom Left End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25023, 5449); //Top Left End No Summoner
					Chestify();
					NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 357, 2, 2); //Top Right Summoner
					NTA_KillMonster(250);
					Chestify();
					if(!NTConfig_ClearArcaneSanc) {
						NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
						return;
					}
				}
				else if (_object[i].x == 26 && _object[i].y == 11){
					Print("Summoner is at the "+COLOR_2+"Bottom Right");
					NTM_MoveTo(me.areaid,  25445, 5869); //Bottom Left End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25023, 5449); //Top Left End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25450, 5030); //Top Right End No Summoner
					Chestify();
					NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 357, 2, 2); //Bottom Right Summoner
					NTA_KillMonster(250);
					Chestify();
					if(!NTConfig_ClearArcaneSanc) {
						NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
						return;
					}
				}
				else if (_object[i].x == 11 && _object[i].y == 21){
					Print("Summoner is at the "+COLOR_2+"Bottom Left");
					NTM_MoveTo(me.areaid,  25023, 5449); //Top Left End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25450, 5030); //Top Right End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25863, 5449); //Bottom Right End No Summoner
					Chestify();
					NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 357, 2, 2); //Bottom Left Summoner
					NTA_KillMonster(250);
					Chestify();
					if(!NTConfig_ClearArcaneSanc) {
						NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
						return;
					}
				}
				else {
					Print("Summoner is at the "+COLOR_2+"Top Left");
					NTM_MoveTo(me.areaid,  25450, 5030); //Top Right End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25863, 5449); //Bottom Right End No Summoner
					Chestify();
					NTM_MoveTo(me.areaid,  25445, 5869); //Bottom Left End No Summoner
					Chestify();
					NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 357, 2, 2); //Top Left Summoner
					NTA_KillMonster(250);
					Chestify();
					if(!NTConfig_ClearArcaneSanc) {
						NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
						return;
					}
				}
			}
		}
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(NTConfig_ClearArcaneSanc) {
		if(NTConfig_ArcaneChampionsOnly) {
			NTConfig_SkipRegularMonsters = true;
			if(!me.GetState(32) || !me.GetState(51)) { NTP_DoPrecast(true); }
			NTA_ClearLevel();
			NTConfig_SkipRegularMonsters = false;
		} else {
			if(!me.GetState(32) || !me.GetState(51)) { NTP_DoPrecast(true); }
			NTA_ClearLevel();
		}
		NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
		return;
	}
	if(!NTConfig_OpenSummonerChests) {
		if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 357, 2, 2)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
			return;
		}
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(!NTConfig_OpenSummonerChests) {
		if(!NTA_KillMonster(250))	{
			NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
			return;
		}
	}
	if(NTConfig_ClearPosition) { NTA_ClearPosition(); }
	NTSI_PickItems();
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Chestify(){
	NTA_ClearPosition(20, true);
	NTC_OpenChestsInAreaNear(me.x, me.y, 30);
	NTSI_PickItems();
	NTC_InTown();
	NTM_MoveTo(me.areaid, 5108, 5059);
	NTTMGR_TownManager(true);
	NTM_MoveTo(me.areaid, 5069, 5066);
	//if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 156, 2, 2)){ Print("TownMove Error!"); }
	if(!NTM_TakeWaypoint(74)){ Print("Waypoint Error!"); }
	if(!me.GetState(32) || !me.GetState(51)) { NTP_DoPrecast(true); }
}

function Duriel()
{
	var _tombs;
	var _unit;

		if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(46)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	_tombs = GetRoom();
	if(!_tombs){
		NTC_SendMsgToScript("NTBotGame.ntj", "GetRoom()");
		return;
	}
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, _tombs.correcttomb-28)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	_unit = NTC_FindUnit(NTC_UNIT_TILE, _tombs.correcttomb-28, 5);
	if(!_unit){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTC_FindUnit()");
		return;
	}
	if(!NTM_TakeStair(_unit.subareaid)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 152, -2, 2)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTConfig_ClearPosition){
		NTA_ClearPosition(20, true);
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	NTC_FindUnit(NTC_UNIT_OBJECT, 100, 10);
	if(!NTM_TakeUnit(NTC_UNIT_OBJECT, 100)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeUnit()");
		return;
	}
	 if(!NTA_KillMonster(211)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	NTSI_PickItems();
}

function NT_AvoidKillDuriel() {
	var duriel;

	if (NTConfig_AttackSkill[1] < 0) {
		return false;
	}

	duriel = NTC_FindUnit(NTC_UNIT_MONSTER, 211, 5);

	if (!duriel) {
		return false;
	}

	if (duriel.IsAttackable()) {
		var _attackcount = 0;
		var currentPosition = 1;

		var posOne = [22638, 15687];
		var posTwo = [22638, 15724];

		while (_attackcount < 300 && NTA_IsValidMonster(duriel)) {
			if((GetDistance(me, duriel)) <= 10) {
				if(currentPosition%2 == 0) {
					NTM_MoveTo(me.areaid, posTwo[0], posTwo[1]);
					currentPosition++;
				} else {
					NTM_MoveTo(me.areaid, posOne[0], posOne[1]);
					currentPosition++;
				}
			}
			NT_SpecialCastSkillInt(duriel)
		}
	}

	return (duriel.hp <= 0 || duriel.mode == 0 || duriel.mode == 12);
}

function NT_SpecialCastSkillInt(target) {

	var castSkill = NTConfig_AttackSkill[9] > -1 ?	NTConfig_AttackSkill[9] : NTConfig_AttackSkill[1];

	if(me.GetSkillStatus(castSkill) != 8) {
		return NTC_CastSkill(castSkill, _NTA_SkillHand[castSkill], target);
	}

	if(NTConfig_AttackSkill[2] > -1) {
		return NTC_CastSkill(NTConfig_AttackSkill[2], _NTA_SkillHand[NTConfig_AttackSkill[2]], target);
	}

	for(var i = 0 ; i < 25 ; i++) {
		NTC_Delay(NTC_DELAY_FRAME);

		if(me.GetSkillStatus(NTConfig_AttackSkill[castSkill]) != 8)
			break;
	}

	return false;
}

function Tunnels()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(44)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	if(!NTM_MoveToStair(me.areaid, 65)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
		return;
	}
	if(!NTM_TakeStair(65)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(!NTA_ClearLevel()){
		if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
			NTTMGR_VisitTown();
		}
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function DarkElder()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(44)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_MONSTER, 751)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if (!NTA_KillMonster(GetLocaleString(2886))){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	NTSI_PickItems();
	if(NTConfig_ClearPosition){
		NTA_ClearPosition(20, true);
	}
	if(NTConfig_ClearLostCity == 1){
		NTConfig_SkipRegularMonsters = false;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
 	if(NTConfig_ClearLostCity == 2){
		NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
    if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Beetle()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(43)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_MONSTER, 747)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if (!NTA_KillMonster(GetLocaleString(2882))){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	if(NTConfig_ClearPosition && NTConfig_ClearFarOasis == 0){
		NTA_ClearPosition(20, true);
	}
	if(NTConfig_ClearFarOasis == 1){
		NTConfig_SkipRegularMonsters = false;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
 	if(NTConfig_ClearFarOasis == 2){
		NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
 if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Tombs()
{
	var _target;

	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(46)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	var _taltomb;
	var _stair = [69, 68, 67, 66, 70, 71, 72];
	for(var i = 0; i < _stair.length; i++){
		NTP_DoPrecast();
		if(!NTM_MoveToStair(me.areaid, _stair[i])){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
			return;
		}
		if(!NTM_TakeStair(_stair[i])){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
		if(NTConfig_ClearTombs){
			NTA_ClearLevel()
		}
		NT_FindTalChest();
		if(i != 6){
			if(!NTM_MoveToStair(me.areaid, 46)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
				return;
			}
			if(!NTM_TakeStair(46)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
				return;
			}
		}
	}
}

function NT_FindTalChest(){
	var pre = GetPresetUnits(me.areaid, NTC_UNIT_OBJECT);
	for (var i = 0; i < pre.length; i++){
		if(pre[i].id == 397 || (pre[i].id >= 354 && pre[i].id <= 356) || (pre[i].id >= 405 && pre[i].id <= 407)){
			NTM_MoveTo(me.areaid,(pre[i].roomx*5 + pre[i].x),(pre[i].roomy*5+pre[i].y));
			_taltomb = false;
			break;
		}
		_taltomb = true;
	}
	if(_taltomb)
	Print("This is the real tomb, no chest here...");
	var _chest = NTC_FindUnit(NTC_UNIT_OBJECT, GetLocaleString(3260), 1);
	if(NTConfig_ClearChestPosition)
	NTA_ClearPosition(20, true);
	if(_chest){
		if(NTC_OpenChest(_chest)){
			NTSI_PickItems();
		}
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
			OpenChestsInArea();
		}
	}
}

function BoneAsh()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(32)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	if(NTConfig_ClearInnerCloister == 1){
		NTConfig_SkipRegularMonsters = false;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
 	if(NTConfig_ClearInnerCloister == 2){
		NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
	NTP_DoPrecast(true);
    if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	if(!NTM_MoveToPresetUnit(33, NTC_UNIT_MONSTER, 743, 0, 10)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if (!NTA_KillMonster(276)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	NTSI_PickItems();
	if(NTConfig_ClearPosition){
		NTA_ClearPosition(20, true);
	}
	if(NTConfig_ClearCathedral == 1){
		NTConfig_SkipRegularMonsters = false;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
 	if(NTConfig_ClearCathedral == 2){
		NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
    if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Tristram()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(4)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_MONSTER, 737, 10, 10)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTConfig_KillRakanishu){
		if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
			NTTMGR_VisitTown();
		}
		if(NTA_KillMonster(GetLocaleString(2872))){
			if(NTConfig_ClearPosition)
				NTA_ClearPosition();
			NTSI_PickItems();
		}
	}
	if(!NTM_UsePortal("Portal", 38)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_UsePortal()");
		return;
	}
	if(!NTA_ClearLevel()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
}

function StormTree()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(79)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	NTP_DoPrecast(true);
	if(!NTM_MoveToPresetUnit(78, NTC_UNIT_MONSTER, 757)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if (!NTA_KillMonster(GetLocaleString(2866))){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	NTSI_PickItems();
	if(NTConfig_ClearPosition){
		NTA_ClearPosition(20, true);
	}
	if(NTConfig_ClearFlayerJungle == 1){
		NTConfig_SkipRegularMonsters = false;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
	if(NTConfig_ClearFlayerJungle == 2){
		NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Travincal()
{
	var _waypoint;
	var _deltax, _deltay;
	var _attackpos = [5800, 1554, 5799, 1534, 5799, 1526, 5797, 1514, 5795, 1490, 5787, 1491, 5797, 1514, 5781, 1514];

	if(!NTTM_CheckAct())	{
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(83)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	_waypoint = NTC_FindUnit(NTC_UNIT_OBJECT, GetLocaleString(22526), 5);
	if(!_waypoint){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTC_FindUnit()");
		return;
	}
	_deltax = _waypoint.x - 5699;
	_deltay = _waypoint.y - 1584;
	NTP_DoPrecast(true);
	if(!NTM_MoveTo(me.areaid, 5780+_deltax, 1555+_deltay)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	for(var i = 0 ; i < _attackpos.length ; i += 2){
		NTM_MoveTo(me.areaid, _attackpos[i]+_deltax, _attackpos[i+1]+_deltay);

		NTA_ClearPosition(25, true, 2);
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
}

function Mephisto()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(101)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_SwitchTele){
		NTC_SwapWeapons(1);
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	if(!NTM_MoveToStair(me.areaid, 102)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
		return;
	}
	if(!NTM_TakeStair(102)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(NTConfig_SwitchTele){
		NTC_SwapWeapons(0);
	}
	if(NTConfig_KillCouncilMembers){
		var _attackpos = [
						17651, 8066, 17630, 8069, 17625, 8048, 17647, 8040, //bottom council members
						17610, 8124, 17603, 8138, 17623, 8138, 17571, 8121, //left-side council member
						17609, 8022, 17616, 8006, 17592, 8015, 17575, 8012  // right-side council member
						];
		for(var i = 0 ; i < _attackpos.length ; i += 2){
			NTM_MoveTo(me.areaid, _attackpos[i], _attackpos[i+1]);
			NTA_ClearPosition();
			NTSI_PickItems();
		}
	}
	if(!NTM_MoveTo(me.areaid, 17564, 8069)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
		return;
	}
	NTC_Delay(200);
	if(me.classid != NTC_CHAR_CLASS_PALADIN && me.classid != NTC_CHAR_CLASS_BARBARIAN)
		NTM_MoveTo(me.areaid, 17573, 8071);
	if(!NTA_KillMonster(242)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	if(NTConfig_ClearPosition)
		NTA_ClearPosition();
	NTSI_PickItems();
	if(NTConfig_OpenChest){
		var _chest;
		if(NTM_MoveTo(me.areaid, 17520, 8063))
			NTA_ClearPosition(30, true);
		_chest = NTC_FindUnit(NTC_UNIT_OBJECT, GetLocaleString(3260), 1);
		if(_chest){
			do{
				if(_chest.x == 17513 && _chest.y == 8063){
					if(NTC_OpenChest(_chest))
						NTSI_PickItems();
					break;
				}
			} while(_chest.GetNext());
		}
	}

	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	if(NTConfig_RedPortal){
		var _isTelekinesis = NTC_GetSkillLevel(43);
		if (NTConfig_Telekinesis && (me.classid == NTC_CHAR_CLASS_SORCERESS) && (_isTelekinesis)) {
			NTM_MoveTo(me.areaid, 17586, 8068);
			var bridge = GetUnit(NTC_UNIT_OBJECT, 341);
			if(bridge){
				while(bridge.mode != 2){
					Delay(500);
				}
			}
			NTM_MoveTo(me.areaid, 17590, 8068);
			var _portal = GetUnit(NTC_UNIT_OBJECT, 342);
			if(_portal){
				while(_portal.mode != 2){
					Delay(500);
				}
				Delay(1000);
				for(var i = 0 ; i < 3 ; i++){
					NTC_CastSkill(43, NTC_HAND_RIGHT, _portal);
					Delay(500)
					if(me.areaid != 102){
						break;
					}
				}
			}
		}
		if(me.areaid == 102) {
			NTM_MoveTo(me.areaid, 17590, 8068);
			var bridge = GetUnit(NTC_UNIT_OBJECT, 341);
			if(bridge){
				while(bridge.mode != 2){
					Delay(500);
				}
			}
			var _portal = GetUnit(NTC_UNIT_OBJECT, 342);
			if(_portal){
				while(_portal.mode != 2){
					Delay(500);
				}
				NTM_TakeUnit(NTC_UNIT_OBJECT, 342);
			}
		}
		while(me.areaid == 0){
			Delay(500);
		}
	}
}

function Izual()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(106)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	if(NTConfig_ClearCityOfTheDamned  == 1 || NTConfig_ClearCityOfTheDamned == 2){
		if(NTConfig_ClearCityOfTheDamned == 1)
			NTConfig_SkipRegularMonsters = false;
		else
			NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
	NTP_DoPrecast(true);
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
	if(!NTM_MoveToPresetUnit(105, NTC_UNIT_MONSTER, 256, 4, 4)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(!NTA_KillMonster(256)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	NTC_PingDelay(500);
	NTSI_PickItems();
	if(NTConfig_ClearPlainsOfDespair  == 1 || NTConfig_ClearPlainsOfDespair == 2){
		if(NTConfig_ClearPlainsOfDespair == 1){
			NTConfig_SkipRegularMonsters = false;
		}
		else
			NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Forge()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(107)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 376)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(!NTA_KillMonster(409)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	if(NTConfig_ClearPosition)
		NTA_ClearPosition(30);
	NTSI_PickItems();
	if(NTConfig_ClearRiverOfFlames  == 1 || NTConfig_ClearRiverOfFlames == 2){
		if(NTConfig_ClearRiverOfFlames == 1){
			NTConfig_SkipRegularMonsters = false;
		}
		else
			NTConfig_SkipRegularMonsters = true;
		NTP_DoPrecast(true);
		if(!NTA_ClearLevel()){
			return;
		}
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function Diablo()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}

	NTTMGR_TownManager();
	Print(COLOR_8 + "Going to River of Flame");

	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}

	if(!NTM_TakeWaypoint(107)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}

	Print(COLOR_5 + "Precasting");
	NTP_DoPrecast(true);
	Print(COLOR_8 + "Going to Chaos Sanctuary");

	if (!NTM_MoveTo(108, 7790, 5544)) {
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
		return;
	}

	if (!NTConfig_FastChaos) {
		if (NTConfig_Entrance) {
			NTCS_ClearPosition(30, EntranceSort);
			NTM_MoveTo(108, 7790, 5544);
			NTCS_ClearPosition(30, EntranceSort);
			NTM_MoveTo(108, 7790, 5544);
			PubTP();
			PubSay("Entrance Tp clean!");
			BO_Party();
			NTCS_ClearPosition(20, EntranceSort);

			var FrontToStarX = [7794,7791,7777,7813,7769,7782,7802,7819,7768,7770,7791,7819, 7804];
			var FrontToStarY = [5529,5495,5486,5486,5445,5421,5421,5446,5390,5355,5355,5376, 5340];

			for (var i = 0; i < FrontToStarX.length; i += 1) {
				NTM_MoveTo(108, FrontToStarX[i], FrontToStarY[i]);
				NTCS_ClearPosition(35, EntranceSort);
			}
		}

		for (i = 0; i < 2; i += 1) {
			NTM_MoveTo(108, 7784, 5310);
			NTCS_ClearPosition(30, SealSort);

			NTC_PingDelay(i < 1 ? 1000 : 10);
		}

		NTM_MoveTo(108, 7784, 5310);
		PubTP();
		PubSay("Star Tp clean!");

		BO_Party();
		NTCS_ClearPosition(40, SealSort);
	} else {
		NTM_MoveTo(108, 7784, 5310);
		NTCS_ClearPosition(20, DistanceSort);
		NTM_MoveTo(108, 7784, 5310);
		PubTP(); // for helper
	}

	if (!NT_OpenSealsInt()) {
		NTC_SendMsgToScript("NTBotGame.ntj", "NT_OpenSealsInt()");
		return;
	}

	PubSay("Killin big D!");

	NTM_MoveTo(108, 7792, 5291);
	NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe);
	Print(COLOR_8 + "Waiting for Diablo to spawn..");

	for (i = 0; i < 200; i += 1) {
		if (GetUnit(NTC_UNIT_MONSTER, 243)) {
			break;
		}

		NTC_Delay(500);
	}

	if (!NTA_KillMonster(243)) {
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}

	NTSI_PickItems();
}

function NT_OpenSealsInt() {
	var _unit;
	var _result;

	_unit = GetPresetUnits(108, NTC_UNIT_OBJECT, 396);

	if (!_unit) {
		return false;
	}

	if (_unit[0].roomy * 5 + _unit[0].y == 5275) {
		_result = NT_OpenVizierSealInt(1);
	} else {
		_result = NT_OpenVizierSealInt(2);
	}

	if (!NTConfig_FastChaos) {
		NTP_DoPrecast(true);
	}

	_unit = GetPresetUnits(108, NTC_UNIT_OBJECT, 394);

	if (_unit[0].roomx * 5 + _unit[0].x == 7773) {
		_result = NT_OpenDeSeisSealInt(1);
	} else {
		_result = NT_OpenDeSeisSealInt(2);
	}

	if (!_result) {
		return false;
	}

	if (!NTConfig_FastChaos) {
		NTP_DoPrecast(true);
	}

	_unit = GetPresetUnits(108, NTC_UNIT_OBJECT, 392);

	if (!_unit) {
		return false;
	}

	if (_unit[0].roomx * 5 + _unit[0].x == 7893) {
		_result = NT_OpenVenomSealInt(1);
	} else {
		_result = NT_OpenVenomSealInt(2);
	}

	NTP_DoPrecast(true);

	return _result;
}

function NT_OpenVizierSealInt(type) {
	var i;

	if (!NTConfig_FastChaos) {
		if (type === 1) {
			var vx = [7767,7756,7744,7747,7750,7741,7729,7720,7720,7721,7719,7712,7700,7687,7676, 7666];//   |||   |||
			var vy = [5292,5284,5275,5290,5303,5310,5314,5312,5301,5288,5273,5292,5294,5294,5292, 5307];//      |||
		} else {
			var vx = [7768,7755,7741,7733,7723,7714,7707,7680,7666, 7655];//   |||||||||
			var vy = [5289,5295,5282,5291,5300,5282,5315,5310,5311, 5282];//   |||
		}

		for (i = 0; i < vx.length; i += 1) {
			NTM_MoveTo(108, vx[i], vy[i]);
			NTCS_ClearPosition(35, SealSort);
		}
	}

	if (!NT_OpenSealInt(395) || !NT_OpenSealInt(396)) {
		return false;
	}

	if (type == 1) {
		NTM_MoveTo(108, 7691, 5292);
		NTC_Delay(500);
	} else {
		NTM_MoveTo(108, 7695, 5316);
		NTC_Delay(500);
	}

	NTCS_Preattack(GetLocaleString(2851));
	NTCS_ClearPosition(40, DistanceSort, NTConfig_FastChaos && !NTConfig_LeechSupport ? 0x10 : null, NTConfig_FastChaos && !NTConfig_LeechSupport ? 306 : null);
	NTA_KillMonster(GetLocaleString(2851)); // Grand Vizier of Chaos
	NTCS_ClearPosition(40, DistanceSort, NTConfig_FastChaos && !NTConfig_LeechSupport ? 0x10 : null, NTConfig_FastChaos && !NTConfig_LeechSupport ? 306 : null);

	if(NTConfig_IdInField){
		NT_FieldID();
	}
	return true;
}

function NT_OpenDeSeisSealInt(type) {
	var i, n;

	if (!NTConfig_FastChaos) {
		if (type === 1) {
			var sx = [7791,7783,7800,7809,7785,7773,7773,7776,7794,7811,7817,7815,7798]; // Shape of "2"
			var sy = [5265,5256,5247,5232,5230,5222,5212,5194,5194,5193,5177,5157,5155];
		} else {
			var sx = [7786,7801,7786,7787,7810,7811,7810,7790,7774,7773,7794]; // shape of an "S" or "5"
			var sy = [5263,5249,5245,5227,5233,5215,5198,5194,5181,5156,5154];
		}

		for (var i = 0; i < sx.length; i += 1) {
			NTM_MoveTo(108, sx[i], sy[i]);
			NTCS_ClearPosition(35, type === 1 ? SealSort : SealSortB);
		}
	}

	if (!NT_OpenSealInt(394)) {
		return false;
	}

	if (type == 1) {
		NTM_MoveTo(108, 7797, 5201);

		for (i = 0; i < 3; i += 1) {
			NTM_TeleportTo(7794, 5227);
		}
	} else {
		NTM_MoveTo(108, 7798, 5186);
	}

	NTCS_Preattack(GetLocaleString(2852));
	NTCS_ClearPosition(40, DistanceSort, NTConfig_FastChaos && !NTConfig_LeechSupport ? 0x10 : null, NTConfig_FastChaos && !NTConfig_LeechSupport ? 310 : null);
	NTA_KillMonster(GetLocaleString(2852)); // Lord De Seis
	NTCS_ClearPosition(40, DistanceSort, NTConfig_FastChaos && !NTConfig_LeechSupport ? 0x10 : null, NTConfig_FastChaos && !NTConfig_LeechSupport ? 310 : null);

	if(NTConfig_IdInField){
		NT_FieldID();
	}

	return NTM_MoveTo(108, 7800, 5255);
}

function NT_OpenVenomSealInt(type) {
	if (!NTConfig_FastChaos) {
		if (type === 1) {
			var IX = [7825,7827,7834,7845,7855,7852,7875,7896,7917]; // shape of a "t"
			var IY = [5293,5276,5291,5315,5301,5278,5293,5295,5291];
		} else {
			var IX = [7822,7826,7832,7850,7868,7877,7891,7907,7927,7932]; // looks like a hook
			var IY = [5297,5278,5307,5278,5297,5276,5276,5276,5279,5298];
		}

		for (var i = 0; i < IX.length; i += 1) {
			NTM_MoveTo(108, IX[i], IY[i]);
			NTCS_ClearPosition(35, type === 1 ? SealSort : SealSortB);
		}
	}

	if (!NT_OpenSealInt(393) || !NT_OpenSealInt(392)) {
		return false;
	}

	if (type === 1) {
		type = 1; // temp
	} else {
		NTM_MoveTo(108, 7933, 5299);
	}

	NTCS_Preattack(GetLocaleString(2853));
	NTCS_ClearPosition(40, DistanceSort, NTConfig_FastChaos && !NTConfig_LeechSupport ? 0x10 : null, NTConfig_FastChaos && !NTConfig_LeechSupport ? 362 : null);
	NTA_KillMonster(GetLocaleString(2853)); // Infector of Souls
	NTCS_ClearPosition(40, DistanceSort, NTConfig_FastChaos && !NTConfig_LeechSupport ? 0x10 : null, NTConfig_FastChaos && !NTConfig_LeechSupport ? 362 : null);

	if(NTConfig_IdInField){
		NT_FieldID();
	}

	if (NTC_PutSkill(124, NTC_HAND_RIGHT)) {
		NTC_PingDelay(1000);
	}

	return true;
}

function NT_OpenSealInt(classid) {
	var warn;
	switch (classid) {
	case 396:
	case 394:
	case 392:
		warn = true;
		break;
	default:
		warn = false;
		break;
	}

	var i, seal;

	for (i = 0; i < 5; i += 1) {
		NTM_MoveToPresetUnit(108, 2, classid, classid === 394 ? 5 : 2, classid === 394 ? 5 : 0);

		seal = NTC_FindUnit(NTC_UNIT_OBJECT, classid);

		if (!seal) {
			return false;
		}

		if (seal.mode) { // for pubbies
			if (warn) {
				PubSay("Don't hit the seals.");
			}

			return true;
		}

		warn = false;

		NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, seal);
		NTC_Delay(classid === 394 ? 1000 : 500);

		if (!seal.mode) {
			if (classid === 394 && CheckCollision(seal.x + 15, seal.y)) { // de seis optimization
				NTM_MoveTo(108, seal.x + 15, seal.y);
			} else {
				NTM_MoveTo(108, seal.x - 5, seal.y - 5);
			}

			NTC_Delay(500);
		} else {
			return true;
		}
	}

	return false;
}

function BO_Party() {
	if (NTConfig_PublicMode) {
		NTC_Delay(1000);
	}

	NTP_DoPrecast(true);
}

function NTA_MonsterStats(unit) {
	this.name = unit.name;
	this.x = unit.x;
	this.y = unit.y;
	this.gid = unit.gid;
	this.classid = unit.classid;
	this.spectype = unit.spectype;
}

function DistanceSort(unitA, unitB) {
	if (GetDistance(me.x, me.y, unitA.x, unitA.y) < GetDistance(me.x, me.y, unitB.x, unitB.y)) {
		return -1;
	}

	return 1;
}

function EntranceSort(unitA, unitB) {
	if (GetDistance(unitA.x, unitA.y, 7790, 5544) < GetDistance(unitB.x, unitB.y, 7790, 5544)) {
		return -1;
	}

	return 1;
}

function SealSort(unitA, unitB) {
	if (GetDistance(unitA.x, unitA.y, 7784, 5310) < GetDistance(unitB.x, unitB.y, 7784, 5310)) {
		return -1;
	}

	return 1;
}

function SealSortB(unitA, unitB) {
	if (GetDistance(unitA.x, unitA.y, 7800, 5255) < GetDistance(unitB.x, unitB.y, 7800, 5255)) {
		return -1;
	}

	return 1;
}

function NTCS_Preattack(name) {
	var i, n, target, pos, positions;

	target = NTC_FindUnit(1, name, 10);

	switch (me.classid) {
		case 0:
			break;
		case 1:
			break;
		case 2:
			break;
		case 3:
			if (!target) {
				return;
			}

			positions = [[6, 11], [0, 8], [8, -1], [-9, 2], [0, -11], [8, -8]];

			for (i = 0; i < positions.length; i += 1) {
				if (CheckCollision(me.areaid, target.x + positions[i][0], target.y + positions[i][1], 1)) { // check if we can move there
					Print("Preattack position: " + positions[i][0] + " " + positions[i][1]);

					NTM_MoveTo(108, target.x + positions[i][0], target.y + positions[i][1]);
					NTC_PutSkill(NTConfig_AttackSkill[2], NTC_HAND_RIGHT);

					for (n = 0; n < 8; n += 1) {
						NTC_CastSkill(NTConfig_AttackSkill[1], 2);
					}

					break;
				}
			}

			break;
		case 4:
			if (!target || NTConfig_AttackSkill[0] < 0) {
				return;
			}

			pos = me.GetOptimalAttackPos(target.areaid, target.x, target.y, 20, 4);

			if (pos) {
				NTM_MoveTo(108, pos[0], pos[1]);
			}

			for (i = 0; i < 2; i += 1) {
				NTC_CastSkill(130, NTC_HAND_RIGHT);
				NTC_Delay(150);
			}

			break;
		case 5:
			break;
		case 6:
			break;
	}
}

// general functions

function PubTP() {
	if (NTConfig_PublicMode) {
		NTM_MakeTP();
	}
}

function PubSay(string) {
	if (NTConfig_PublicMode) {
		Say(string);
	}
}

function OpenStashes(range) {
	var i, unit,
		objects = [GetLocaleString(3274)],
		orgx = me.x,
		orgy = me.y;

	for (i = 0; i < objects.length; i += 1) {
		unit = NTC_FindUnit(NTC_UNIT_OBJECT, objects[i]);

		if (unit) {
			do {
				if (GetDistance(orgx, orgy, unit.x, unit.y) <= range) {
					if (NTC_OpenChest(unit)) {
						NTSI_PickItems();
					}
				}
			} while (unit.GetNext());
		}
	}
}

function NTT_CheckPotionSafe() {
	var i, items, hpCheck, mpCheck;

	items = me.GetItems();

	if (NTConfig_BeltColType.indexOf("hp") > -1) {
		for (i = 0; i < items.length; i += 1) {
			if (!hpCheck && items[i].mode === 2 && items[i].code.indexOf("hp") > -1) {
				hpCheck = true;
			}
		}
	} else {
		hpCheck = true;
	}

	if (NTConfig_BeltColType.indexOf("mp") > -1) {
		for (i = 0; i < items.length; i += 1) {
			if (!mpCheck && items[i].mode === 2 && items[i].code.indexOf("mp") > -1) {
				mpCheck = true;
			}
		}
	} else {
		mpCheck = true;
	}

	return !(hpCheck && mpCheck);
}

function NTA_Dodge(target, distance) {
	var i, j, coordx, coordy, monster, count,
		maxcount = 999,
		coords = [],
		goodCoords = [],
		monList = [],
		angles = [45, 90, 135, 180, 225, 270, 305, 360];

	for (i = 0; i < angles.length; i += 1) {
		coordx = Math.round((Math.cos(angles[i] * Math.PI / 180)) * distance + target.x);
		coordy = Math.round((Math.sin(angles[i] * Math.PI / 180)) * distance + target.y);

		if (CheckCollision(me.areaid, coordx, coordy, 1)) {
			coords.push([coordx, coordy]);
		}
	}

	if (coords.length === 0) { // no valid positions - don't move
		return true;
	}

	coords.sort(NTA_SortRooms);

	monster = GetUnit(1);

	if (monster) {
		do {
			if (monster.hp > 0) {
				monList.push(new NTA_MonsterStats(target));
			}
		} while (monster.GetNext());
	}

	for (i = 0; i < coords.length; i += 1) {
		count = 0;

		for (j = 0; j < monList.length; j += 1) {
			if (monList[j].hp > 0 && GetDistance(monList[j].x, monList[j].y, coords[i][0], coords[i][1]) < 10) {
				count += 1;
			}
		}

		if (count < maxcount) {
			goodCoords = [coords[i][0], coords[i][1]];
			maxcount = count;

			if (count === 0) {
				break;
			}
		}
	}

	if (goodCoords.length > 0) { // just in case goodCoords is empty (shouldn't happen)
		if (Math.abs(me.x - goodCoords[0]) < 3 && Math.abs(me.y - goodCoords[1]) < 3) { // close enough
			return true;
		}

		Say("!Dodge " + target.name);
		NTM_MoveTo(me.areaid, goodCoords[0], goodCoords[1]);
	}

	return true;
}

function NTCS_ClearPosition(range, sortFunc, spectype, classid) {
	var i, orgx, orgy, monList, ignoreList, target, result,
		gidAttack = [],
		dodgeIDs = [310, 362],
		attackcount = 0;

	if (NTConfig_AttackSkill[1] < 0 || NTConfig_AttackSkill[3] < 0) {
		return false;
	}

	switch (arguments.length) {
	case 0:
		range = 35;
	case 1:
		sortFunc = DistanceSort;
	case 2:
		spectype = false;
	case 3:
		classid = false;
		break;
	}

	orgx = me.x;
	orgy = me.y;
	ignoreList = [];

	MainLoop : while (attackcount < 300) {
		monList = [];
		target = NTC_FindUnit(NTC_UNIT_MONSTER);

		if (target) {
			do {
				if (target.IsAttackable()) {
					if ((me.classid === 1 || me.classid === 2 || me.classid === 6) && NTConfig_Dodge && GetDistance(me, target) < 7 && dodgeIDs.indexOf(target.classid) > -1) {
						NTA_Dodge(target, 15);
						continue MainLoop;
					}

					if (ignoreList.indexOf(target.gid) < 0 && GetDistance(orgx, orgy, target.x, target.y) <= range) {
						if (NTA_IsValidMonster(target)) {
							monList.push(new NTA_MonsterStats(target));
						} else {
							ignoreList.push(target.gid);
						}
					}
				}
			} while (target.GetNext());
		}

		if (monList.length === 0) {
			break;
		}

		monList.sort(sortFunc);

		target = NTC_FindUnit(NTC_UNIT_MONSTER, monList[0].gid);

		if (target && target.IsAttackable()) {
			result = NTA_Attack(target, attackcount % 30 === 0);

			switch (result) {
			case 1:
				monList.shift();
				ignoreList.push(target.gid);
				break;
			case 2:
			case 3:
				if(!gidAttack[target.gid]) {
					gidAttack[target.gid] = 0;
				}

				gidAttack[target.gid] += 1;

				if (gidAttack[target.gid] > NTConfig_LowMaxAttacks) {
					Print(COLOR_1 + " Skipping " + target.name);
					monList.shift();
					ignoreList.push(target.gid);
				}

				attackcount += 1;

				if (target.mode === 0 || target.mode === 12) {
					NTSI_FastPick();
				}

				break;
			default:
				return false;
			}
		} else {
			monList.shift();
			ignoreList.push(target.gid);
		}
	}

	switch (me.classid) {
		case NTC_CHAR_CLASS_PALADIN:
			if (attackcount > 2 && (parseInt(me.hp * 100/ me.hpmax) < NTConfig_UseRedemptionHP || parseInt(me.mp * 100 / me.mpmax) < NTConfig_UseRedemptionMP)) {
				if (NTC_PutSkill(124, NTC_HAND_RIGHT)) {
					NTC_PingDelay(1000);
				}
			}

			break;
		case NTC_CHAR_CLASS_NECROMANCER:
			if (typeof(NTA_SkeletonArmy) === 'function') { // old summon code
				NTA_SkeletonArmy(NTConfig_SkeletonArmy);
				NTA_MageArmy(NTConfig_MageArmy);
				NTA_ReviveArmy(NTConfig_ReviveArmy);
			} else {
				NTA_RaiseArmy(); // new summon code
			}
			break;
		case NTC_CHAR_CLASS_SORCERESS:
			if (me.GetState(30) === 0) {
				NTC_CastSkill(58, NTC_HAND_RIGHT);
			}

			break;
		case NTC_CHAR_CLASS_BARBARIAN:
			if (attackcount > 0) {
				if (typeof(MWL_FindItem) === 'function') { // in case of using muddy's item find (like myself)
					MWL_FindItem(20);
				} else if (NTConfig_UseFindItem && !NTA_CheckForCloseMonsters(10)) {
					NTA_FindItem(NTConfig_FindItemRange);
				}
			}

			break;
	}

	if (attackcount > 0) {
		NTSI_PickItems();
	}
	if (NTT_CheckMerc()) {
		Print(COLOR_1 + " Merc died, going to town.");
		NTTMGR_VisitTown();
	}
	if (NTT_CheckPotionSafe()) {
		Print(COLOR_1 + " Out of potions, going to town.");
		NTTMGR_VisitTown();
	}
	if (NTConfig_IdInField) {
		if (!NTT_CheckSpace(NTConfig_FreeSpaceXY[0], NTConfig_FreeSpaceXY[1])) {
			NT_FieldID();
		}
	}
	return true;
}

function NTA_SortRooms(a, b) {
	if (GetDistance(me.x, me.y, a[0], a[1]) < GetDistance(me.x, me.y, b[0], b[1])) {
		return -1;
	}
	return 1;
}

var _NTNihlathak_Locations = new Array(8, 4);

_NTNihlathak_Locations[0] = [12519, 5203, 12522, 5227]; // Top Left
_NTNihlathak_Locations[1] = [12704, 5019, 12692, 5022]; // Top Right
_NTNihlathak_Locations[2] = [12705, 5391, 12723, 5413]; // Bottom Right
_NTNihlathak_Locations[3] = [12889, 5206, 12898, 5228]; // Bottom Left
_NTNihlathak_Locations[4] = [12519, 5203, 12522, 5196]; // Top Left
_NTNihlathak_Locations[5] = [12704, 5019, 12692, 5413]; // Top Right
_NTNihlathak_Locations[6] = [12705, 5391, 12727, 5022]; // Bottom Right
_NTNihlathak_Locations[7] = [12889, 5206, 12898, 5192]; // Bottom Left


function PindleSkin()
{
	if(!NTConfig_DanceForPindle) {
		NTConfig_DancingSorc = false;
	}

	if(!NTTM_CheckAct())
	{
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}

	NTTMGR_TownManager();

	if(NTConfig_UseTemplePortal)
	{
		if(!NTTM_CheckAct(5))
		{
			NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
			return;
		}

		if(!NTTM_TownMove("portal"))
		{
			NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
			return;
		}

		if(!NTM_UsePortal("Portal", 121))
		{
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_UsePortal()");
			return;
		}

		NTP_DoPrecast(true);

		if(NTConfig_KillPindleskin)
		{
			if(!NTM_MoveTo(me.areaid, 10061, 13234))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}

			if(!NTA_KillMonster(GetLocaleString(22497)))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
				return;
			}

			if(NTConfig_ClearPosition)
				NTA_ClearPosition();

			NTSI_PickItems();
		}

		if(NTConfig_KillNihlathak)
		{
			var _location;

			for(var i = 0 ; i < 3 ; i++)
			{
				if(!NTM_MoveToStair(me.areaid, 122+i))
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
					return;
				}

				if(!NTM_TakeStair(122+i))
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
					return;
				}

				if(me.areaid == 124)
					break;

				switch(NTConfig_ClearHalls)
				{
				case 0:
					break;
				case 1:
					NTConfig_SkipRegularMonsters = false;
					NTP_DoPrecast(true);
					if(!NTA_ClearLevel())
					{
						NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
						return;
					}
					break;
				case 2:
					NTConfig_SkipRegularMonsters = true;
					NTP_DoPrecast(true);
					if(!NTA_ClearLevel())
					{
						NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
						return;
					}
					break;
				}

				if(NTConfig_OpenHallsSuperChests)
					OpenSpecialChestsInArea();

				if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
					OpenChestsInArea();
			}

			NTP_DoPrecast(false);

			_location = NT_FindNihlathakInt();

			if(_location == -1)
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NT_FindNihlathakInt()");
				return;
			}

			if(!NTM_MoveTo(me.areaid, _NTNihlathak_Locations[_location][2], _NTNihlathak_Locations[_location][3]))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}

			if(NTConfig_CheckVipers && NTC_FindUnit(NTC_UNIT_MONSTER, GetLocaleString(2956)))
			{
				NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Tomb Vipers found.");
				return;
			}

			if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
				NTTMGR_VisitTown();
			}

			if(!NTA_KillMonster(526))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
				return;
			}

			if(NTConfig_ClearPosition)
				NTA_ClearPosition();

			NTSI_PickItems();

			switch(NTConfig_ClearHallsOfVaught)
			{
			case 0:
				break;
			case 1:
				NTConfig_SkipRegularMonsters = false;
				NTP_DoPrecast(true);
				if(!NTA_ClearLevel())
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
					return;
				}
				break;
			case 2:
				NTConfig_SkipRegularMonsters = true;
				NTP_DoPrecast(true);
				if(!NTA_ClearLevel())
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
					return;
				}
				break;
			}

			if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
				OpenChestsInArea();

			if(NTConfig_OpenEvilUrnNihl)
			{
				if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 466))
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
					return;
				}

				var _EvilUrn = NTC_FindUnit(NTC_UNIT_OBJECT, 466);

				if(_EvilUrn)
				{
					if(NTM_MoveTo(_EvilUrn.areaid, _EvilUrn.x+1, _EvilUrn.y))
					{
						if(NTC_OpenChest(_EvilUrn))
							NTC_Delay(1000);
						NTA_ClearPosition(20, true)
						NTC_Delay(500);
						NTA_ClearPosition(20, true)
						NTSI_PickItems();
					}
				}
			}
		}
	}
	else
	{
		if(!NTTM_TownMove("waypoint"))
		{
			NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
			return;
		}

		if(!NTM_TakeWaypoint(123))
		{
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
			return;
		}

		if(NTConfig_KillNihlathak)
		{
			var _location;

			switch(NTConfig_ClearHalls)
			{
			case 0:
				break;
			case 1:
				NTConfig_SkipRegularMonsters = false;
				NTP_DoPrecast(true);
				if(!NTA_ClearLevel())
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
					return;
				}
				break;
			case 2:
				NTConfig_SkipRegularMonsters = true;
				NTP_DoPrecast(true);
				if(!NTA_ClearLevel())
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
					return;
				}
				break;
			}
			NTP_DoPrecast(true);
			if(NTConfig_OpenHallsSuperChests)
				OpenSpecialChestsInArea();

			if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
				OpenChestsInArea();

			if(!NTM_MoveToStair(me.areaid, 124))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
				return;
			}

			if(!NTM_TakeStair(124))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
				return;
			}

			NTP_DoPrecast(false);

			_location = NT_FindNihlathakInt();

			if(_location == -1)
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NT_FindNihlathakInt()");
				return;
			}

			if(!NTM_MoveTo(me.areaid, _NTNihlathak_Locations[_location][2], _NTNihlathak_Locations[_location][3]))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}

			if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
				NTTMGR_VisitTown();
			}

			if(NTConfig_CheckVipers && NTC_FindUnit(NTC_UNIT_MONSTER, GetLocaleString(2956)))
			{
				NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Tomb Vipers found.");
				return;
			}

			if(!NTA_KillMonster(526))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
				return;
			}

			if(NTConfig_ClearPosition)
				NTA_ClearPosition();

			NTSI_PickItems();

			switch(NTConfig_ClearHallsOfVaught)
			{
			case 0:
				break;
			case 1:
				NTConfig_SkipRegularMonsters = false;
				NTP_DoPrecast(true);
				if(!NTA_ClearLevel())
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
					return;
				}
				break;
			case 2:
				NTConfig_SkipRegularMonsters = true;
				NTP_DoPrecast(true);
				if(!NTA_ClearLevel())
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
					return;
				}
				break;
			}

			if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
				OpenChestsInArea();

			if(NTConfig_OpenEvilUrnNihl)
			{
				if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 466))
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
					return;
				}

				var _EvilUrn = NTC_FindUnit(NTC_UNIT_OBJECT, 466);

				if(_EvilUrn)
				{
					if(NTM_MoveTo(_EvilUrn.areaid, _EvilUrn.x+1, _EvilUrn.y))
					{
						if(NTC_OpenChest(_EvilUrn))
							NTC_Delay(1000);
						NTA_ClearPosition(20, true)
						NTC_Delay(500);
						NTA_ClearPosition(20, true)
						NTSI_PickItems();
					}
				}
			}
		}

		if(NTConfig_KillPindleskin)
		{
			switch(me.areaid)
			{
			case 124:
				if(!NTM_MoveToStair(me.areaid, 123))
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
					return;
				}

				if(!NTM_TakeStair(123))
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
					return;
				}
			case 123:
				NTP_DoPrecast(false);

				for(var i = 0 ; i < 2 ; i++)
				{
					if(!NTM_MoveToStair(me.areaid, 122-i))
					{
						NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
						return;
					}

					if(!NTM_TakeStair(122-i))
					{
						NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
						return;
					}

					if(me.areaid == 121)
						break;

					switch(NTConfig_ClearHalls)
					{
					case 0:
						break;
					case 1:
						NTConfig_SkipRegularMonsters = false;
						NTP_DoPrecast(true);
						if(!NTA_ClearLevel())
						{
							NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
							return;
						}
						break;
					case 2:
						NTConfig_SkipRegularMonsters = true;
						NTP_DoPrecast(true);
						if(!NTA_ClearLevel())
						{
							NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
							return;
						}
						break;
					}

					if(NTConfig_OpenHallsSuperChests)
						OpenSpecialChestsInArea();

					if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
						OpenChestsInArea();
				}
				break;
			}

			if(!NTM_MoveTo(me.areaid, 10061, 13234))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}

			if(!NTA_KillMonster(GetLocaleString(22497)))
			{
				NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
				return;
			}

			if(NTConfig_ClearPosition)
				NTA_ClearPosition();

			NTSI_PickItems();
		}
	}
	return;
}

function NT_FindNihlathakInt()
{
	var i, x, y;
	var _nihlathak;
	var _mindist = 999999;
	var _currdist;
	var _location = -1;

	_nihlathak = GetPresetUnits(me.areaid, NTC_UNIT_OBJECT, 462);

	if(!_nihlathak || _nihlathak.length < 1)
		return _location;

	x = _nihlathak[0].roomx*5 + _nihlathak[0].x;
	y = _nihlathak[0].roomy*5 + _nihlathak[0].y;

	for(i = 0 ; i < 8 ; i++)
	{
		_currdist = GetDistance(_NTNihlathak_Locations[i][0], _NTNihlathak_Locations[i][1], x, y);

		if(_currdist < _mindist)
		{
			_mindist = _currdist;
			_location = i;
		}
	}

	return _location;
}

function Eldritch()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(111)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(!NTM_MoveTo(me.areaid, 3750, 5090)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
		return;
	}
	if(NTA_KillMonster(GetLocaleString(22500))){
		if(NTConfig_ClearPosition)
			NTA_ClearPosition();
		NTSI_PickItems();
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
			OpenChestsInArea();
		}
	}
	if(NTConfig_ShenkExtension){
		if(!NTM_MoveTo(110, 3876, 5120)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
			return;
		}
		if(me.classid != NTC_CHAR_CLASS_PALADIN && me.classid != NTC_CHAR_CLASS_BARBARIAN)
			NTA_ClearPosition(20, true);
		if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
			NTTMGR_VisitTown();
		}
		if(!NTA_KillMonster(GetLocaleString(22435)))
		if(NTConfig_ClearPosition)
			NTA_ClearPosition();
		NTSI_PickItems();
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
			OpenChestsInArea();
	}
	if(NTConfig_DacFarren){
		if(!NTM_MoveTo(110, 4507, 5116)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
			return;
		}
		if(!NTA_KillMonster(GetLocaleString(22501))){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
			return;
		}
		if(NTConfig_ClearPosition)
			NTA_ClearPosition();
		NTSI_PickItems();
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
			OpenChestsInArea();
		}
	}
}

function ThreshSocket()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(112)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(!NTM_MoveToStair(me.areaid, 113)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	if(!NTA_KillMonster(GetLocaleString(22498))){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
		return;
	}
	if(NTConfig_ClearPosition)
		NTA_ClearPosition();
	NTSI_PickItems();
	if(NTConfig_OpenEvilUrn){
		if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 466)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
			return;
		}
		var _EvilUrn;
		_EvilUrn = NTC_FindUnit(NTC_UNIT_OBJECT, 466);
		if(_EvilUrn){
			if(NTM_MoveTo(_EvilUrn.areaid, _EvilUrn.x+2, _EvilUrn.y)){
				if(NTC_OpenChest(_EvilUrn))
					NTSI_PickItems();
			}
		}
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas()){
		OpenChestsInArea();
	}
}

function WorldStone()
{
	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(118)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast();
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, 74)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(!NTM_TakeStair()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, 80)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(!NTM_TakeStair()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	NTP_DoPrecast();
	if(!NTA_ClearLevel()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, 82)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(!NTM_TakeStair()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	NTP_DoPrecast();
	if(!NTA_ClearLevel()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, 82)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return;
	}
	if(!NTM_TakeStair()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
		return;
	}
	if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
		NTTMGR_VisitTown();
	}
	NTP_DoPrecast();
	if(!NTA_ClearLevel()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
		return;
	}
	if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
		OpenChestsInArea();
}

function Baal()
{
	var i;
	var _wave;
	var _starttick;

	if(!NTTM_CheckAct()){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	NTTMGR_TownManager();
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove()");
		return;
	}
	if(!NTM_TakeWaypoint(129)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint()");
		return;
	}
	NTP_DoPrecast(true);
	if(NTConfig_ClearWSK == 1){ // Chair add - checking what clear option has been selected. non specified = don't clear!
		clearpath = true;
	}
	else if(NTConfig_ClearWSK == 2){
		clearpath = 2;
	}
	else{
		clearpath = false;
	}
	if(clearpath != 2){ //Chair add - first block handles anything but full level clears
		if(!NTM_MoveToStair(me.areaid, 130,0,0,clearpath)){ // Chair add - the clearpath variable is adjusted by NTConfig_ClearWSK above
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
			return;
		}
		if(!NTM_TakeStair(130)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
		if(!NTM_MoveToStair(me.areaid, 131,0,0,clearpath)){ // Chair add - the clearpath variable is adjusted by NTConfig_ClearWSK above
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
				return;
		}
		if(NTConfig_MakeHelpTPBeforeThrone && NTConfig_PublicMode){
			NTM_MakeTP();
			Say(Baal_WSlvl3tpMSG);
			NTC_Delay(1000);
			NTP_DoPrecast(true);
		}
		if(!NTM_TakeStair(130+i)){ 	// stair var i isn't being used yet so not sure why you have it here??? doesn't get used until line 147

			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
	}
	else{ 	//Chair add - This entire block handles the option to clear the entire lvl 2 and 3, not only the path.
		if(!NTA_ClearLevel()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
			return;
		}
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
			OpenChestsInArea();
		if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, 82)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
			return;
		}
		if(!NTM_TakeStair()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
		if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
			NTTMGR_VisitTown();
		}
		NTP_DoPrecast();
		if(!NTA_ClearLevel()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
			return;
		}
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
			OpenChestsInArea();
		if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_TILE, 82)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
			return;
		}
		if(!NTM_TakeStair()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
			return;
		}
		if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
			NTTMGR_VisitTown();
		}
		NTP_DoPrecast();
		if(!NTA_ClearLevel()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTA_ClearLevel()");
			return;
		}
		if(NTConfig_OpenChestsInArea && NTU_DontOpenAreas())
			OpenChestsInArea();
	}
	//End of things added by Chairman
	if(!NTM_MoveTo(me.areaid, 15112, 5068)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
		return;
	}
	// Adding Doll Check
	if(NTConfig_CheckSoulKillers && NTC_FindUnit(NTC_UNIT_MONSTER, GetLocaleString(2904))) {
		NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Undead Soul Killers found.");
		NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
		return;
	}
	// End Doll Check
	NTA_ClearPosition(20, true, 2);
	if(NTConfig_PublicMode){
		if(NTConfig_MakeHotTP){
			NTM_MoveTo(me.areaid, 15116, 5068);
			NTC_PingDelay(1000);
			NTA_ClearPosition(20, true, 2);
			NTM_MoveTo(me.areaid, 15116, 5068);
			if(NTThrone_Announce)
				_announceTMobs();
			NTM_MakeTP();
			Say(Baal_HotTp);
			NTC_Delay(500);
			NTP_DoPrecast(true);
		}
	}
	NT_ClearThroneInt();
	if(NTConfig_PublicMode){
		NTM_MoveTo(me.areaid, 15112, 5004, 1, true);
		NTM_MakeTP();
		Say(Baal_SafeTp);
		NTC_Delay(500);
		NTP_DoPrecast(true);
	}
	while(1){
		NTC_Delay(100);
		NTM_MoveTo(me.areaid, prewavespot[0], prewavespot[1]);
		if(me.GetState(2))
			NTC_PutSkill(109, NTC_HAND_RIGHT);
		if(NTConfig_IdInField){
			NT_FieldID();
		}
		for(i = 0 ; i < 6 ; i++){
			_wave = NT_ThroneCheckInt();
			if(_wave > 0)
				break;
			NTC_Delay(500);
		}
		_starttick = GetTickCount();
		while(_wave == 0){
			if(!NT_ThronePreAttackInt())
				NTC_Delay(200);
			if(GetTickCount()-_starttick > 17000){
				NT_ClearThroneInt();
				_starttick = GetTickCount();
			}
			_wave = NT_ThroneCheckInt();
		}
		switch(_wave){
			case 1:
				if(NTConfig_TeleEachWave){
					NTM_TeleportTo(me.x+1, me.y+3);
                }
				NTA_ClearPosition(40, true, 2);
				NTP_DoPrecast(true);
				break;
			case 2:
				if(NTConfig_TeleEachWave){
					NTM_TeleportTo(me.x+1, me.y+3);
                }
				if(NTConfig_HolyBoltBaal)
					if (me.classid == NTC_CHAR_CLASS_PALADIN && NTConfig_AttackSkill[5] == 101)
						achmel();
				NTA_ClearPosition(40, true, 2);
				if(NTConfig_PsnW2){
					if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
						NTTMGR_VisitTown();
					}
				}
				break;
			case 3:
				if(NTConfig_TeleEachWave){
					NTM_TeleportTo(me.x+1, me.y+3);
                }
				NTA_ClearPosition(40, true, 2);
				if(NTConfig_Wave3 > 0){
					NT_CheckHydraInt();
				}
				else
					NTC_Delay(3000);
				break;
			case 4:
				if(NTConfig_TeleEachWave){
					NTM_TeleportTo(me.x+1, me.y+3);
                }
				NTA_ClearPosition(40, true, 2);
				break;
			case 5:
				if(NTConfig_TeleEachWave){
					NTM_TeleportTo(me.x+1, me.y+3);
                }
				NTA_ClearPosition(40, true, 2);
				break;
			default:
				if(NTConfig_TeleEachWave){
					NTM_TeleportTo(me.x+1, me.y+3);
                }
				NTA_ClearPosition(40, true, 2);
				break;
		}
		if(_wave != 0) // Need to force a one time cast/wave Assassin only
			_trapsPreCasted = false;
		if(_wave == 5)
			break;
	}
	if(NTConfig_KillBaal){
		var _portal;
		if(NTConfig_PublicMode)
			Say(Baal_KillBaalMessage);
		if(NTConfig_TownBeforeBaal && NTT_CheckInventoryBeforeBoss()){
			Delay(1000);
			if(NTConfig_PublicMode) {
				Say(Baal_FreeSpaceMessage);
			}
			NTTMGR_VisitTown();
		}
		if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
			NTTMGR_VisitTown();
		}
		NTM_MoveTo(me.areaid, 15092, 5010);
		NTP_DoPrecast(true);
		if(NTConfig_IdInField){
			NT_FieldID();
		}
		/*
		while(NTC_FindUnit(NTC_UNIT_MONSTER, 543))
			NTC_Delay(500);
		*/
		for(var i = 0; i < 60; i++) {
			Delay(500);
			if(!NTC_FindUnit(NTC_UNIT_MONSTER, 543)) {
				break;
			}
			if(i >= 58) {
				Say("looks like baal is bugged");
				if(Baal_BSayNextGame.length > 0 && NTConfig_PublicMode) {
					Say(Baal_BSayNextGame + NTC_NextGameSayererer());
				}
			}
		}
		_portal = NTC_FindUnit(NTC_UNIT_OBJECT, 563, 1);
		if(!_portal){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTC_FindUnit()");
			return;
		}
		if(!NTM_UsePortal("Portal", 132, null, _portal)){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTM_UsePortal()");
			return;
		}
		NTM_MoveTo(me.areaid, 15138, 5916);
		if(!NTA_KillMonster(544)){
			if(NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe)){
				NTTMGR_VisitTown();
			}
			NTC_SendMsgToScript("NTBotGame.ntj", "NTA_KillMonster()");
			return;
		}
		NTSI_PickItems();
	}
}

function NT_ClearThroneInt(){
	var _attackpos = [15112, 5068, 15075, 5065, 15114, 5045, 15114, 5012, 15095, 5024, 15078, 5013, 15092, 5040];
	for(var i = 0 ; i < _attackpos.length ; i += 2){
		NTM_MoveTo(me.areaid, _attackpos[i], _attackpos[i+1]);
		NTA_ClearPosition(25, true, 2);
	}
}

function NT_ThroneCheckInt(){
	var _monster;
	if(!NTC_FindUnit(NTC_UNIT_MONSTER, 543))
		return 5;
	_monster = NTC_FindUnit(NTC_UNIT_MONSTER);
	if(_monster){
		do{
			if(NTA_IsValidMonster(_monster)){
				if(_monster.classid == 23 || _monster.classid == 62)
					return 1;
				if(_monster.classid == 105 || _monster.classid == 381)
					return 2;
				if(_monster.classid == 557)
					return 3;
				if(_monster.classid == 558)
					return 4;
				if(_monster.classid == 571)
					return 5;
			}
		} while(_monster.GetNext());
	}
	return 0;
}

function NT_ThronePreAttackInt(){
	if(me.classid == NTC_CHAR_CLASS_SORCERESS){
		if(NTConfig_PreWaveSpam > 0){
			if(poscount == 1){
				poscount = 2;
				return NTC_CastSkill(NTConfig_PreWaveSpam, 0, KBLSpamPos[0], KBLSpamPos[1]);
			}
			else if(poscount == 2){
				poscount = 3;
				return NTC_CastSkill(NTConfig_PreWaveSpam, 0, KBLSpamPos[2], KBLSpamPos[3]);
			}
			else{
				poscount = 1;
				return NTC_CastSkill(NTConfig_PreWaveSpam, 0, KBLSpamPos[4], KBLSpamPos[5]);
			}
		}
	}
	else if(me.classid == NTC_CHAR_CLASS_DRUID){
		if(NTConfig_AttackSkill[3] == 245){
			return NTC_CastSkill(NTConfig_AttackSkill[3], 2, DruidPreAtt[0], DruidPreAtt[1]);
		}
	}
	else if(me.classid == NTC_CHAR_CLASS_NECROMANCER){
		if(NTConfig_PreWaveSpam > 0)
			return NTC_CastSkill(NTConfig_PreWaveSpam, _NTA_SkillHand[NTConfig_PreWaveSpam], NecroPreAtt[0], NecroPreAtt[1]);
	}
	else if(me.classid == NTC_CHAR_CLASS_PALADIN){
		if(NTConfig_AttackSkill[3] == 112){
			NTC_PutSkill(NTConfig_AttackSkill[3], NTC_HAND_LEFT);
			NTC_PutSkill(NTConfig_AttackSkill[4], NTC_HAND_RIGHT);
			return NTC_CastSkill(NTConfig_AttackSkill[3], 2, 15092, 5028);
		}
	}
	else if(me.classid == NTC_CHAR_CLASS_ASSASSIN){
		var _attackPos = [15088,5023,15087,5032,15098,5022,15101,5034,15094,5029];
		if(NTConfig_UseTraps && !_trapsPreCasted){
			for(var i=0;i<5;i++) {
				if(i == 0 || i == 2 || i == 3) // Added delays to prevent trap miscast
					NTC_Delay(25);
				if(NTConfig_TrapSet[i] > 0)
					NTC_CastSkill(NTConfig_TrapSet[i], NTC_HAND_RIGHT, _attackPos[i*2],_attackPos[(i*2)+1]);
			}
			_trapsPreCasted = true;
		}
		if(NTConfig_AttackSkill[3] == 256)
			if(me.GetSkillStatus(NTConfig_AttackSkill[3]) != 8)
				return NTC_CastSkill(NTConfig_AttackSkill[3], 2, 15093, 5030);
	}
	return false;
}

function NT_CheckHydraInt(){
	var _hydra1, _hydra2, _hydra3;
	_hydra1 = NTC_FindUnit(NTC_UNIT_MONSTER, 351);
	_hydra2 = NTC_FindUnit(NTC_UNIT_MONSTER, 352);
	_hydra3 = NTC_FindUnit(NTC_UNIT_MONSTER, 353);
	if((_hydra1 && _hydra1.GetStat(172) != 2 && _hydra1.GetState(105))
	  || (_hydra2 && _hydra2.GetStat(172) != 2 && _hydra2.GetState(105))
	  || (_hydra3 && _hydra3.GetStat(172) != 2 && _hydra3.GetState(105))){
		if(NTConfig_Wave3 == 1)
			NTM_MoveTo(me.areaid, 15112, 5004); // right side
		else if(NTConfig_Wave3 == 2)
			NTM_MoveTo(me.areaid, 15073, 5002); // left side
		if(me.GetState(2))
			NTC_PutSkill(109, NTC_HAND_RIGHT);
		NTC_PingDelay(3000);
	}
}

function achmel(){
	var x = 0;
	var _holdTargetHp = 0;
	NTC_PutSkill(NTConfig_AttackSkill[6], NTC_HAND_RIGHT);
	var _achmel = NTC_FindUnit(NTC_UNIT_MONSTER, GetLocaleString(21852));
	while (_achmel && _achmel.hp > 0){
		_holdTargetHp = _achmel.hp;
		for(var i = 0; i < 5 ; i++){
			NTC_CastSkill(NTConfig_AttackSkill[5], NTC_HAND_LEFT, _achmel);
		}
		if(_holdTargetHp <= _achmel.hp && NTConfig_WalkAround) {
			x++;
			if(x % 2 == 0)
				NTM_WalkTo(me.x+10, me.y);
			else
				NTM_WalkTo(me.x-10, me.y);
		}
	}
	var _company = NTC_FindUnit(NTC_UNIT_MONSTER, 105);
	do{
		while (_company != null && _company.hp >0 && !_company.GetState(53) && !_company.GetState(96)){
			_holdTargetHp = _company.hp;
			for(var i = 0; i < 5 ; i++){
				NTC_CastSkill(NTConfig_AttackSkill[5], NTC_HAND_LEFT, _company);
			}
			if(_holdTargetHp <= _company.hp && NTConfig_WalkAround) {
				x++;
				if(x % 2 == 0)
					NTM_WalkTo(me.x+10, me.y);
				else
					NTM_WalkTo(me.x-10, me.y);
			}
		}
	} while (_company && _company.GetNext());
}

function HostileHandler(msg){
	if(msg == "pause"){
		if(_hostilepause){
			Print(COLOR_3 + "Resuming...");
			_hostilepause = false;
		}
		else{
			Print(COLOR_1 + "Pausing to kill hostiles...");
			_hostilepause = true;

			ClickMap(NTC_CLICK_LUP, NTC_SHIFT_NONE, null);
			ClickMap(NTC_CLICK_RUP, NTC_SHIFT_NONE, null);

			while(_hostilepause)
				NTC_Delay(250);
		}
	}
}

function _announceTMobs() {

	var _throneMobs = [];
	var _count = [];

	_monster = NTC_FindUnit(NTC_UNIT_MONSTER);

	if(_monster){
		do {
			if(_outofTBounds(_monster.x, _monster.y))
				continue;
			switch(_monster.classid) {
				case 120:
				case 641:
				case 733: _updateTMobs("Burning Soul");
					break;
				case 215:
				case 691: _updateTMobs("Undead Soul Killer");
					break;
				case 478:
				case 637: _updateTMobs("Hell Witch");
					break;
				case 77:
				case 598: _updateTMobs("Serpent Magus");
					break;
				case 133:
				case 697:
				case 731: _updateTMobs("Dark Lord");
					break;
				case 510: _updateTMobs("Blood Lord");
					break;
				case 310:
				case 699:
				case 700: _updateTMobs("Doom Knight");
					break;
				case 312:
				case 701:
				case 702:
				case 713: _updateTMobs("Oblivion Knight");
					break;
				case 361:
				case 687:
				case 712: _updateTMobs("Pit Lord");
					break;
				case 104:
				case 669:
				case 670: _updateTMobs("Horadrim Ancient");
					break;
				case 33:
				case 603: _updateTMobs("Assailant");
					break;
				default: _updateTMobs("Trash Mob");
					break;
			}
		} while(_monster.GetNext())
	}

	_sayTMobs();

	function _updateTMobs(Tmob) {
		var _tIndex = _throneMobs.indexOf(Tmob);
		if(_tIndex == -1) {
			_throneMobs.push(Tmob);
			_count.push(1);
		}
		else {
			_count[_tIndex]++;
		}
	}

	function _sayTMobs() {
		for(var i = 0; i < _throneMobs.length; i++) {
			Say(_count[i] + " " + (_count[i] == 1 ? _throneMobs[i] : (_throneMobs[i].charAt(_throneMobs[i].length - 1).toLowerCase() == "s" ? _throneMobs[i] + "'s" : (_throneMobs[i].indexOf("Witch") != -1 ? _throneMobs[i] + "es" : _throneMobs[i] + "s"))));
			Delay(100);
		}
	}

	function _outofTBounds(monX, monY) {
		if((monX >= 15072 && monX <= 15118 && monY >= 5002 && monY <=5073) || (monX >= 15087 && monX <= 15104 && monY >= 5073 && monY <= 5094))
			return false;
		return true;
	}
}

function GrabWps()
{
		Include("libs/common/NTVoyage.ntl");

	checknext = false;
	NTConfig_Shrines = [];

	NTTMGR_TownManager();

	NTV_GetWPs();
}

var _leader;
var _player;
var locked;
var inuse;
var skip = false;
var abort = false;
var tptown =true;
var _area;
var _joiner;
var party_player;

function GiveWps()
{
	NTConfig_PublicMode = true;
	_leader = 1
	RegisterEvent(EVENT_GAMEMSG, NT_GameMsgEvents);
	partyforcer();
	Say('Hi im here to give you wps. Please identify your self as the person who will receive them by typing "help me"');

	while(1){
	Delay(1000);
	}

}

function NT_GameMsgEvents(msg, type){

   	if(type == 0 && msg.indexOf("help me") != -1){

		if(!locked){
			var _split = msg.split(":");
			_leader = _split[0].substring(3, _split[0].length - 3);
			if(_leader == me.charname){
				_leader = null
			}
			_player = GetPlayerUnit();
			while(_leader != _player.name && _leader != 1 && _leader != null)
				_player.GetNext();
			if(_leader != null){
				locked = true
				Say("Im currently helping: " + _leader);
			}
			if(locked)
				commands();
		}
		else
			Say("Sorry i currently helping " + _leader + " please wait untill they done")
	}
	else if(type == 4 && (msg.indexOf("stronger") != -1)){
		partyforcer();
		var playername = msg.split("(")[0]; //)
		_joiner = GetPlayerUnit();
		while(playername != _joiner.name)
			_joiner.GetNext();
		if(_leader != null && _leader != 1)
			Say("Welcome " + playername + " ,Sorry i currently helping " + _leader + " please wait untill they done");
		else(_leader == null && _leader == 1)
			Say("Welcome " + playername + " ,I'm currently avalible to help you please type 'help me' to get started");
	}
	else if(type == 4 && (msg.indexOf("weaken") != -1) && (msg.indexOf(_leader) != -1)) {
		abort = true
		Say("Aborting the person getting wps left i will be free in 5 seconds for a new leader")
		_leader = 1
		Delay(5000)
	}
   	else if(type == 4 && (msg.indexOf("dropped") != -1) && (msg.indexOf(_leader) != -1)) { // leader dropped
		abort = true
		Say("Aborting the person getting wps dropped i will be free in 5 seconds for a new leader")
		_leader = 1
		Delay(5000)
	}
	else if(type == 0 && (msg.indexOf("skip") != -1) && (msg.indexOf(_leader) != -1)) {
		skip = true;
	}
	else if(type == 0 && (msg.indexOf("abort") != -1) && (msg.indexOf(_leader) != -1)) {
		abort = true;
		Say("Aborting...");
	}
	else if(type == 0 && (msg.indexOf("finished") != -1) && (msg.indexOf(_leader) != -1)) {
		_leader = 1;
		locked = false;
		Say("Im ready to help some one else")
		Say("Please end the game on irc if everybody is done with me")
	}
	else if(type == 0 && (msg.indexOf("act1") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			act1();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("act2") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			act2();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("act3") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			act3();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("act4") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			act4();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("act5") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			act5();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("all") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			act1();
			act2();
			act3();
			act4();
			act5();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("rush") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			rush();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("key") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			key();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
	else if(type == 0 && (msg.indexOf("quest") != -1) && (msg.indexOf(_leader) != -1)) {
		if(inuse)
			Say("Sorry i cant do that right now " + _leader + " please wait till im done with my current task")
		else{
			inuse = true;
			quest();
			inuse = false;
			abort = false;
			Say("Im finished with my current task")
		}
	}
}

function commands(){
	Say('Commands now availible are...');
	Delay(200);
	Say('"act#" replace # with 1-5 it will give you all wps for that act');
	Delay(200);
	Say('"all" will give you all wps in the game');
	Delay(200);
	Say('"rush" will give you all the rushing wps');
	Delay(200);
	Say('"quest" will give you the wps for all quests not coverd by "rush"');
	Delay(200);
	Say('"key" will give you the key boss wps');
	Delay(200);
	Say('"skip" will skip over the current wp its giving');
	Delay(200);
	Say('"abort" will abort it out of its current task and go to act 4 to wait for the next command');
	Delay(200);
	Say('"finished" will deidentify you so someone else can get the wps in the same game');
}
function filltpsJamella(){
var _npc;
var _BuyTP;
_BuyTP = (NTTMGR_CheckScrolls(1) < 20);
	if(_BuyTP){
	NTTM_TownMove("jamella");

	_npc = NTC_FindUnit(NTC_UNIT_NPC, NTC_NPC_ID_JAMELLA, 5);

		if(_npc){
				NTT_DoInteract(_npc)
				NTT_DoTrade(_npc)
				NTT_FillTome(_npc, 1);
				me.Cancel(1);
		}
	}
}

function act1(){
	if (abort)
		return;
	var _wps1 = [3, 4, 5, 6, 27, 29, 32, 35];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");
	for(var i = 0; i < _wps1.length; i++){
		NTM_TakeWaypoint(_wps1[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);
			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}

function act2(){
	if (abort)
		return;
	var _wps2 = [48, 42, 57, 43, 44, 52, 74, 46];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _wps2.length; i++){
		NTM_TakeWaypoint(_wps2[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}

function act3(){
	if (abort)
		return;
	var _wps3 = [76, 77, 78, 79, 80, 81, 83, 101];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _wps3.length; i++){
		NTM_TakeWaypoint(_wps3[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}

function act4(){
	if (abort)
		return;
	var _wps4 = [106, 107];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _wps4.length; i++){
		NTM_TakeWaypoint(_wps4[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}

function act5(){
	if (abort)
		return;
	var _wps5 = [111, 112, 113, 115, 123, 117, 118, 129];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _wps5.length; i++){
		NTM_TakeWaypoint(_wps5[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}
function rush(){
	if (abort)
		return;
	var _rush = [35, 103, 57, 43, 44, 52, 74, 46, 103, 83, 101, 103, 107, 103, 118, 129];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _rush.length; i++){
		NTM_TakeWaypoint(_rush[i]);
		if(me.areaid == 103){
			NTTMGR_TownManager();
			filltpsJamella();
			NTTM_TownMove("waypoint");
			i++
			NTM_TakeWaypoint(_rush[i]);
		}
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}
function key(){
	if (abort)
		return;
	var _key = [6, 74, 123];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _key.length; i++){
		NTM_TakeWaypoint(_key[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}
function quest(){
	if (abort)
		return;
	var _quest = [3, 4, 5, 6, 27, 48, 80, 106, 111, 113, 123];

	NTTM_CheckAct(4);
	NTTMGR_TownManager();
	filltpsJamella();
	NTTM_TownMove("waypoint");

	for(var i = 0; i < _quest.length; i++){
		NTM_TakeWaypoint(_quest[i]);
		var _wppos = [me.x, me.y];
		_area = GetArea();
		NTM_MoveTo(me.areaid, me.x - 3, me.y + 5);
		NTM_MakeTP();
		Say("TP is up for " + _area.name);			while(!skip && (_player.areaid != me.areaid)){
				if (abort)
					break;
				if(!me.GetState(51))
					NTP_DoPrecast(true);
				NTA_ClearPosition(10);
				if (abort)
					break;
				NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);
				if (abort)
					break;
				Delay(1500);
			}
		if(skip)
			Say("Skiping ...");
		Delay(1500);
		skip = false;
		NTM_MoveTo(me.areaid, _wppos[0], _wppos[1]);

		if (abort)
			break;
	}
	if(me.areaid == 1 || me.areaid == 40 || me.areaid == 75 || me.areaid == 103 || me.areaid == 109)
		tptown = false;
	if(tptown)
		NTM_MakeTP(true);
	NTTM_CheckAct(4);
	tptown = true;
}
function partyforcer()
{
party_player = GetPlayerUnit();

				if(party_player){
					_mypartyid = party_player.partyid;
					while(party_player.GetNext()){

						if(party_player.partyid == 65535 || party_player.partyid != _mypartyid){

							if(party_player.partyflag == 2){
								me.ClickParty(party_player, 2);
								break;
							}

							if(party_player.partyid == 65535){

								if(party_player.partyflag == 4)
									continue;

								me.ClickParty(party_player, 2);
								//NTC_Delay(NTC_DELAY_FRAME);

								//if(party_player.partyflag == 4 || (party_player.partyid != 65535 && party_player.partyid == _mypartyid))
									//break;
							}
						}
					}
				}
}